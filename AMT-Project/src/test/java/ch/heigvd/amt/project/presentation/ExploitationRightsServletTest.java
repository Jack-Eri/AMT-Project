package ch.heigvd.amt.project.presentation;

import ch.heigvd.amt.project.datastore.exceptions.KeyNotFoundException;
import ch.heigvd.amt.project.model.ExploitationRight;
import ch.heigvd.amt.project.services.ExploitationRightLocal;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentMatchers;
import org.mockito.Mock;
import org.mockito.internal.util.reflection.FieldSetter;

import javax.servlet.ServletException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import static org.mockito.ArgumentMatchers.*;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.*;
import static org.mockito.Mockito.verify;

public class ExploitationRightsServletTest extends ServletTest {

    @Mock
    private ExploitationRightLocal rightsManager;

    private ExploitationRightsServlet servlet;

    @BeforeEach
    void setUpServlet() throws NoSuchFieldException {

        servlet = new ExploitationRightsServlet();
        FieldSetter.setField(servlet, servlet.getClass().getDeclaredField("rightsManager"), rightsManager);
    }

    @Test
    void doGet() throws ServletException, IOException, SQLException {
        List<ExploitationRight> rights = new LinkedList<>();

        when(request.getParameter("amount")).thenReturn("25");
        when(request.getParameter("page")).thenReturn("1");
        when(rightsManager.findAll(any())).thenReturn(rights);

        servlet.doGet(request, response);

        verify(request).getParameter("amount");
        verify(request).getParameter("page");

        verify(rightsManager).findAll(any());

        verify(request).setAttribute("amount", 25);
        verify(request).setAttribute("page", 1);
        verify(request).setAttribute("rights", rights);

        verify(request).getRequestDispatcher(ArgumentMatchers.contains("exploitationRights"));
        verify(requestDispatcher).forward(request, response);
    }

    @Test
    void itCanUpdateARight() throws SQLException, ServletException, IOException, KeyNotFoundException {
        Map<String, String[]> parameterMap = new HashMap<>();
        parameterMap.put("update", new String[] {});

        when(request.getParameterMap()).thenReturn(parameterMap);
        when(request.getParameter("idFarmer")).thenReturn("1");
        when(request.getParameter("idField")).thenReturn("2");
        when(request.getParameter("issueDate")).thenReturn("2019-12-20");
        when(request.getParameter("monthlyFee")).thenReturn("1200");
        when(request.getParameter("duration")).thenReturn("12");

        servlet.doPost(request, response);

        verify(request).getParameter("idFarmer");
        verify(request).getParameter("idField");
        verify(request).getParameter("issueDate");
        verify(request).getParameter("monthlyFee");
        verify(request).getParameter("duration");

        verify(rightsManager).update(any());

        verify(request).setAttribute(eq("success"), anyString());
        verify(request, never()).setAttribute(eq("error"), anyString());
    }
}
